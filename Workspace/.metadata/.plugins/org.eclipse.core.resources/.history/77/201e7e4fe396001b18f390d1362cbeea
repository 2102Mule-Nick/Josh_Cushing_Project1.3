package com.staykeep.daoimpl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;

import com.staykeep.dao.RoomDao;
import com.staykeep.mapper.ReservationRowMapper;
import com.staykeep.mapper.RoomRowMapper;
import com.staykeep.mapper.StayRowMapper;
import com.staykeep.pojo.Reservation;
import com.staykeep.pojo.Room;
import com.staykeep.pojo.Stay;

// DAO implementation to hold all functionality concerning room objects.
@Repository
public class RoomDaoImpl implements RoomDao {

	// JDBC Template to use for database connection.
	private JdbcTemplate jdbcTemplate;

	// RoomRowMapper to return Room objects from database.
	private RoomRowMapper roomRowMapper;

	// StayRowMapper to return Stay objects from database.
	private StayRowMapper stayRowMapper;

	// ReservationRowMapper to return Stay objects from database.
	private ReservationRowMapper reservationRowMapper;

	// Auto-wired setter --> nothing calls this.
	@Autowired
	public void setJdbcdTemplate(JdbcTemplate jdbcdTemplate) {
		this.jdbcTemplate = jdbcdTemplate;
	}

	// Auto-wired setter --> nothing calls this.
	@Autowired
	public void setRoomRowMapper(RoomRowMapper roomRowMapper) {
		this.roomRowMapper = roomRowMapper;
	}

	// Auto-wired setter --> nothing calls this.
	@Autowired
	public void setStayRowMapper(StayRowMapper stayRowMapper) {
		this.stayRowMapper = stayRowMapper;
	}

	// Auto-wired setter --> nothing calls this.
	@Autowired
	public void setReservationRowMapper(ReservationRowMapper reservationRowMapper) {
		this.reservationRowMapper = reservationRowMapper;
	}

//------------------------------------------------------------------------------------
	
	// Method that returns a list of all rooms.
	@Override
	public List<Room> getAllRooms() {
		String sql = "SELECT r_id, status, bed_num, bed_size, lux_lev, cpn FROM room";
		List<Room> roomList = jdbcTemplate.query(sql, roomRowMapper);
		return roomList;
	}

	// Method that returns the room with the specified id.
	@Override
	public Room getRoomInfoById(int r_id) {
		String sql = "SELECT r_id, status, bed_num, bed_size, lux_lev, cpn FROM room WHERE r_id = ?";
		List<Room> roomList = jdbcTemplate.query(sql, roomRowMapper, r_id);
		return roomList.get(0);
	}

	@Override
	public boolean createNewRoom(String status, int bed_num, String bed_size, String lux_level, float cpn) {
		String sql =  "INSERT INTO room (status, bed_num, bed_size, lux_level, cpn) VALUES (?, ?, ?, ?, ?)";
		Object[] args = new Object[] {status, bed_num, bed_size, lux_level, cpn};
		return jdbcTemplate.update(sql, args) == 1;
	}
	
	
/*
	// Method that returns a list of rooms with the specified status.
	@Override
	public List<Room> getRoomsByStatus(String status) {
		String sql = "SELECT r_id, status, bed_num, bed_size, lux_lev, cpn FROM room WHERE status = ?";
		List<Room> roomList = jdbcTemplate.query(sql, roomRowMapper, status);
		return roomList;
	}
	
	// Method that returns a list of reservations in the specified room.
	@Override
	public List<Reservation> getReservationsByRoom(int r_id) {
		String sql = "SELECT res_id, ch_i_time, ch_i_date, ch_o_time, ch_o_date, u_id, r_id, status FROM reservation WHERE r_id = ?";
		List<Reservation> reservationList = jdbcTemplate.query(sql, reservationRowMapper, r_id);
		return reservationList;
	}

	// Method that returns a list of stays in the specified room.
	@Override
	public List<Stay> getStaysByRoom(int r_id) {
		String sql = "SELECT s_id, ch_i_time, ch_i_date, ch_o_time, ch_o_date, g_id, r_id, bill, is_current FROM stay WHERE r_id = ?";
		List<Stay> stayList = jdbcTemplate.query(sql, stayRowMapper, r_id);
		return stayList;
	}

	// Method that returns a boolean that represents whether the
	// status change in the specified room was successful or not.
	@Override
	public boolean setRoomStatus(String status, int r_id) {
		String sql = "UPDATE room SET status = ? WHERE r_id = ?";
		Object[] args = new Object[] {status, r_id };
		return jdbcTemplate.update(sql, args) == 1;
	}
	*/
}
