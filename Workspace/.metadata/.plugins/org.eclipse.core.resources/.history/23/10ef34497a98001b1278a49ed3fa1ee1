package com.frontdesk;

import java.sql.Date;
import java.sql.Time;
import java.util.List;
import java.util.Scanner;

import org.springframework.context.ApplicationContext;
import org.springframework.context.annotation.AnnotationConfigApplicationContext;

import com.frontdesk.config.AppConfig;
import com.frontdesk.pojo.Guest;
import com.frontdesk.pojo.OnlineUser;
import com.frontdesk.pojo.Reservation;
import com.frontdesk.pojo.Room;
import com.frontdesk.pojo.Stay;
import com.frontdesk.servicefinder.GuestServiceFinder;
import com.frontdesk.servicefinder.OnlineUserServiceFinder;
import com.frontdesk.servicefinder.ReservationServiceFinder;
import com.frontdesk.servicefinder.RoomServiceFinder;
import com.frontdesk.servicefinder.StayServiceFinder;

public class Driver {

	public static void main(String[] args) {

		ApplicationContext appContext = new AnnotationConfigApplicationContext(AppConfig.class);

		System.out.println("FrontDesk is just happy to be involved....");

		String exit = "";

		Scanner scan = new Scanner(System.in);

		do {

			exit = scan.nextLine();

		} while (!"exit".equals(exit));

		/*
		 * Features Documentation (all methods have basic documentation) Unit testing
		 * (100% coverage) Logging 1 Java application that will handle a publicly facing
		 * REST API 3 additional Java applications that will handle parts of the logic
		 * at least 2 of the applications communicate to one another using REST at least
		 * 2 of the applications communicate to one another using SOAP at least 1 JMS
		 * Topic for applications to communicate at least 1 JMS Queue for applications
		 * to communicate
		 * 
		 * Tech Stack Java JUnit Log4J Git SCM (on GitHub) Spring Framework Spring JDBC
		 * Template Spring JMS Template ActiveMQ REST SOAP Spring Transactions (JTA)
		 * 
		 * Init Instructions
		 * 
		 * 5 minute live demonstration of project
		 * 
		 * 
		 */
	}
}
